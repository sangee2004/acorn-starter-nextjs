args: {
	// Turn on or off prisma studio being deployed
	withStudio: false
}

services: db: {
	image: "ghcr.io/acorn-io/mariadb:v1.0.0"
	serviceArgs: {
		dbName:   "app"
		username: "appuser"
	}
}

containers: {
	app: {
		build: context: "."

		dependsOn: "migrate"

		dirs: "./prisma": "./prisma"
		env: {
			DB_URL: localData.dbUrl
                        TEST: "env"
		}

		ports: publish: "3000/http"
		probes: readiness: {
			http: {
				url: "http://localhost:3000/api/todos"
			}
		}

		// Setup hot-reloading if running in development mode
		if args.dev {
			build: {
				target: "prisma"
			}
			dirs: {
				"./prisma":       "./prisma"
				"./public":       "./public"
				"./src":          "./src"
				"./styles":       "./styles"
				"./package.json": "./package.json"
			}
			cmd: ["npm", "run", "dev"]
		}
	}

	if args.dev && args.withStudio {
		studio: {
			image:     "node:18-alpine"
			dependsOn: "migrate"

			dirs: "./prisma": "./prisma"
			env: {
				DB_URL: localData.dbUrl
			}

			ports: publish: "5555/http"
			cmd: ["npx", "prisma", "studio"]
		}
	}
}

jobs: {
	migrate: {
		build: {
			context: "."
			target:  "prisma"
		}
		cmd: ["sh", "prisma/migrate.sh"]
		dependsOn: "db"
		env: {
			DB_URL: localData.dbUrl
		}
	}
}

localData: {
	dbUrl: "mysql://@{services.db.secrets.user.username}:@{services.db.secrets.user.password}@@{services.db.address}:@{service.db.port.3306}/@{service.db.data.dbName}"
}
